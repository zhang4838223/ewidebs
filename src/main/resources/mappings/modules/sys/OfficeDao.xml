<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.ewide.platform.modules.sys.dao.OfficeDao">
	<sql id="sysOfficeColumns">
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids,
		a.area_id AS "area.id",
		a.code,
		a.name,
		a.sort,
		a.type,
		a.address, 
		a.zip_code, 
		a.phone, 
		a.fax, 
		a.email, 
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
		a.useable AS useable,
		a.primary_person AS "primaryPerson.id",
		a.deputy_person AS "deputyPerson.id",
		a.level_code AS "levelCode",
		a.primary_level_code AS "primaryLevelCode"
	</sql>
	
	<sql id="officeColumns">
		<include refid="sysOfficeColumns"/>,
		p.name AS "parent.name",
		ar.name AS "area.name",
		ar.parent_ids AS "area.parentIds",
		pp.name AS "primaryPerson.name",
		dp.name AS "deputyPerson.name"
	</sql>
	
	<sql id="officeJoins">
		LEFT JOIN sys_office p ON p.id = a.parent_id
		LEFT JOIN sys_area ar ON ar.id = a.area_id
		LEFT JOIN SYS_USER pp ON pp.id = a.primary_person
		LEFT JOIN SYS_USER dp ON dp.id = a.deputy_person
    </sql>
	
	<select id="get" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		OR a.id = #{currentUser.office.id}
		ORDER BY a.sort ASC
	</select>
	
	<select id="findListByParentId" resultType="Office">
		SELECT
			<include refid="sysOfficeColumns"/>
		FROM sys_office a
		WHERE a.del_flag = '0' and a.parent_id = #{parentId}
	</select>
			
	<select id="findAllList" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.sort ASC
	</select>
	
	<select id="findByParentIdsLike" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND (a.parent_ids LIKE #{parentIds}
		<if test="id != null and id != ''"> or a.id = #{id}</if>)
		${sqlMap.dsf}
		<!-- OR a.id = #{currentUser.office.id} -->
		<if test="name != null and name != ''">
			AND a.name like '%'||#{name}||'%'
		</if>
		<if test="area != null and area.name != null and area.name != ''">
			AND ar.name like '%'||#{area.name}||'%'
		</if>
		<if test="primaryPerson != null and primaryPerson.id != null and primaryPerson.id != ''">
			AND a.PRIMARY_PERSON = #{primaryPerson.id}
		</if>
		<if test="parentId !=null and parentId !=''"> START WITH  a.parent_id = #{parentId} CONNECT BY PRIOR a.ID = a.parent_id ORDER siblings BY a.sort</if>
		<if test="parentId ==null or parentId ==''"> START WITH  a.parent_id = '0' CONNECT BY PRIOR a.ID = a.parent_id ORDER siblings BY a.sort</if>
	</select>
	
	<insert id="insert">
		INSERT INTO sys_office(
			id, 
			parent_id, 
			parent_ids, 
			area_id, 
			code, 
			name, 
			sort, 
			type, 
			address, 
			zip_code, 
			phone, 
			fax, 
			email, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			del_flag,
			useable,
			primary_person,
			deputy_person,
			level_code,
		    primary_level_code
		) VALUES (
			#{id}, 
			#{parent.id}, 
			#{parentIds}, 
			#{area.id}, 
			#{code}, 
			#{name}, 
			#{sort}, 
			#{type}, 
			#{address}, 
			#{zipCode}, 
			#{phone}, 
			#{fax}, 
			#{email}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{delFlag},
			#{useable},
			#{primaryPerson.id},
			#{deputyPerson.id},
			#{levelCode},
			#{primaryLevelCode}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_office SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}, 
			area_id = #{area.id}, 
			code = #{code}, 
			name = #{name}, 
			type = #{type},
			address = #{address}, 
			zip_code = #{zipCode}, 
			phone = #{phone}, 
			fax = #{fax}, 
			email = #{email}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			useable=#{useable},
			primary_person=#{primaryPerson.id},
			deputy_person=#{deputyPerson.id},
			primary_level_code=#{primaryLevelCode},
			sort=#{sort}
		WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE sys_office SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE sys_office SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
					<if test="dbName == 'mssql'">'%,'+#{id}+',%'</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>
	
	<select id="getParent" resultType="Office">
		select a.parent_id AS "parent.id", p.name
		  from sys_office a
		  LEFT JOIN sys_office p
		    ON p.id = a.parent_id
		 where a.id = #{id}
	</select>
	
	<select id="checkOfficeName" resultType="java.lang.Integer">
		select count(1) from sys_office t where t.name = #{0} and t.parent_id = #{1} and del_flag = '0'
	</select>
	
	<select id="findChildList" resultType="Office">
		SELECT
			<include refid="sysOfficeColumns"/>
		FROM sys_office a
		WHERE a.del_flag = '0' 
			and a.type = '2'
		   and a.parent_id = #{parentIds}
		   ${sqlMap.dsf}
	</select>
	
	<select id="findOfficeList" resultType="Office">
		SELECT
			<include refid="sysOfficeColumns"/>
		FROM sys_office a
		WHERE a.del_flag = '0' 
		   and a.parent_id = #{id} or a.id=#{id}
	</select>
	
	<!-- 查询是否存在根节点 -->
	<select id="findParentId" resultType="Integer">
		SELECT
			count(1)
		FROM sys_office a
		WHERE a.del_flag = '0' AND a.parent_id ='0'
	</select>
</mapper>